module options

const reference = 0
const interpret = 1

export
def parse
{
	const argv, const defs, const error = _
	
	const argc = argv.length
	
	var i = 1
	
	while i < argc do
	{
		const arg = argv[ ++i ]
		
		if arg[ 0 ] != '-' then
		{
			break
		}
		
		const len = arg.length
		
		const c = arg[ 1 ]
		
		if c == '-' then
		{
			# TODO:  long options
			++i
			break
		}
		
		if not c in defs then
		{
			error()
		}
		
		const opt = defs[ c ]
		
		const optvar = opt[ reference ]
		
		if const f = opt[ interpret ] then
		{
			const param
			
			if len > 2 then
			{
				param = arg[ 2 -> len ]
			}
			else
			{
				param = argv[ ++i ]
			}
			
			*optvar = f( param )
		}
	}
	
	const args = argv[ i -> argc ]
	
	return args
}
