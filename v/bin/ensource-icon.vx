#!/usr/bin/env vx

var binary-strings = [ "" ]

for i in 0 -> 8 do
{
	binary-strings = binary-strings map { _ "0", _ "1" }
}

def binarize
{
	const data = _
	
	const bits = data map { *binary-strings[ int _ ] }
	
	return str bits
}

def lineate
{
	var bits = _
	
	translate( &bits, "01", " X" )
	
	return "|" join( " ", *bits ) "|\n"
}

const data = packed load argv[ 1 ]

assert data.size in [ 128, 256 ]

const icons = [data / -128]

for icon in icons do
{
	const rows = [icon / -4] map binarize map lineate
	
	const source = str rows
	
	print source
}
